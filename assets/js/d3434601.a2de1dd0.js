"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[5796],{2584:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"API/Models/Optimization/design-parameters","title":"DesignParamSpec","description":"Data classes for defining design parameter specifications, bounds, and configurations","source":"@site/adk/API/Models/Optimization/design-parameters.md","sourceDirName":"API/Models/Optimization","slug":"/API/Models/Optimization/design-parameters","permalink":"/adk/API/Models/Optimization/design-parameters","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"DesignParamSpec","description":"Data classes for defining design parameter specifications, bounds, and configurations","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Domain and Optimization Classes","permalink":"/adk/API/Models/optimization-data"},"next":{"title":"OptimizationNodeSpec","permalink":"/adk/API/Models/Optimization/optimization-node"}}');var a=n(4848),r=n(8453);const t={title:"DesignParamSpec",description:"Data classes for defining design parameter specifications, bounds, and configurations",sidebar_position:1},d="DesignParamSpec",o={},l=[{value:"Definition",id:"definition",level:2},{value:"Members",id:"members",level:2},{value:"<code>bounds: DesignParamBounds</code>",id:"bounds-designparambounds",level:3},{value:"<code>default: SpecifiedDesignParam</code>",id:"default-specifieddesignparam",level:3},{value:"Definition",id:"definition-1",level:2},{value:"Members",id:"members-1",level:2},{value:"<code>name: str = Field(min_length=1)</code>",id:"name-str--fieldmin_length1",level:3},{value:"<code>location: str</code>",id:"location-str",level:3},{value:"<code>value: float | str</code>",id:"value-float--str",level:3},{value:"Definition",id:"definition-2",level:2},{value:"Members",id:"members-2",level:2},{value:"Definition",id:"definition-3",level:2},{value:"Members",id:"members-3",level:2},{value:"<code>min: float</code>",id:"min-float",level:3},{value:"<code>max: float</code>",id:"max-float",level:3},{value:"Definition",id:"definition-4",level:2},{value:"Members",id:"members-4",level:2},{value:"<code>possibilities: list[float | str]</code>",id:"possibilities-listfloat--str",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"designparamspec",children:"DesignParamSpec"})}),"\n",(0,a.jsx)(i.p,{children:"A data class that defines the complete specification of a design parameter, including its default value and allowable bounds. It supports both continuous and discrete parameter types for flexible optimization setup."}),"\n",(0,a.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"class DesignParamSpec(BaseModel):\r\n    bounds: DesignParamBounds\r\n    default: SpecifiedDesignParam\n"})}),"\n",(0,a.jsx)(i.h2,{id:"members",children:"Members"}),"\n",(0,a.jsx)(i.h3,{id:"bounds-designparambounds",children:(0,a.jsx)(i.code,{children:"bounds: DesignParamBounds"})}),"\n",(0,a.jsxs)(i.p,{children:["Defines the valid range or set of values the parameter can take. Can be either continuous (",(0,a.jsx)(i.code,{children:"ContinuousDesignParamBounds"}),") or discrete (",(0,a.jsx)(i.code,{children:"DiscreteDesignParamBounds"}),")."]}),"\n",(0,a.jsx)(i.h3,{id:"default-specifieddesignparam",children:(0,a.jsx)(i.code,{children:"default: SpecifiedDesignParam"})}),"\n",(0,a.jsx)(i.p,{children:"Specifies the default configuration of the parameter, including its name, location, and initial value."}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h1,{id:"specifieddesignparam",children:"SpecifiedDesignParam"}),"\n",(0,a.jsx)(i.p,{children:"Defines a single design parameter with a name, internal location, and assigned value. Used to represent the default or user-specified state of a design parameter."}),"\n",(0,a.jsx)(i.h2,{id:"definition-1",children:"Definition"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"class SpecifiedDesignParam(BaseModel):\r\n    name: str = Field(min_length=1)\r\n    location: str\r\n    value: float | str\n"})}),"\n",(0,a.jsx)(i.h2,{id:"members-1",children:"Members"}),"\n",(0,a.jsx)(i.h3,{id:"name-str--fieldmin_length1",children:(0,a.jsx)(i.code,{children:"name: str = Field(min_length=1)"})}),"\n",(0,a.jsx)(i.p,{children:"The identifier for the design parameter. Must be at least one character long."}),"\n",(0,a.jsx)(i.h3,{id:"location-str",children:(0,a.jsx)(i.code,{children:"location: str"})}),"\n",(0,a.jsx)(i.p,{children:"Internal mapping location for the parameter. Used for inverse mapping or backend referencing within the optimization framework."}),"\n",(0,a.jsx)(i.h3,{id:"value-float--str",children:(0,a.jsx)(i.code,{children:"value: float | str"})}),"\n",(0,a.jsx)(i.p,{children:"The current or default value assigned to the parameter. Can be numeric or string-based, depending on parameter type."}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h1,{id:"designparambounds",children:"DesignParamBounds"}),"\n",(0,a.jsx)(i.p,{children:"An abstract base class representing a generic boundary definition for design parameters. It serves as a parent class for specific bound types (continuous or discrete)."}),"\n",(0,a.jsx)(i.h2,{id:"definition-2",children:"Definition"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"class DesignParamBounds(BaseModel): \r\n    pass\n"})}),"\n",(0,a.jsx)(i.h2,{id:"members-2",children:"Members"}),"\n",(0,a.jsx)(i.p,{children:"(No direct members \u2014 this class provides a shared interface for bound subclasses.)"}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h1,{id:"continuousdesignparambounds",children:"ContinuousDesignParamBounds"}),"\n",(0,a.jsx)(i.p,{children:"Defines the lower and upper numeric limits for a continuous design parameter."}),"\n",(0,a.jsx)(i.h2,{id:"definition-3",children:"Definition"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"class ContinuousDesignParamBounds(DesignParamBounds):\r\n    min: float\r\n    max: float\n"})}),"\n",(0,a.jsx)(i.h2,{id:"members-3",children:"Members"}),"\n",(0,a.jsx)(i.h3,{id:"min-float",children:(0,a.jsx)(i.code,{children:"min: float"})}),"\n",(0,a.jsx)(i.p,{children:"Minimum allowable numeric value for the parameter."}),"\n",(0,a.jsx)(i.h3,{id:"max-float",children:(0,a.jsx)(i.code,{children:"max: float"})}),"\n",(0,a.jsx)(i.p,{children:"Maximum allowable numeric value for the parameter."}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h1,{id:"discretedesignparambounds",children:"DiscreteDesignParamBounds"}),"\n",(0,a.jsx)(i.p,{children:"Defines a finite set of discrete permissible values for a design parameter."}),"\n",(0,a.jsx)(i.h2,{id:"definition-4",children:"Definition"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"class DiscreteDesignParamBounds(DesignParamBounds):\r\n    possibilities: list[float | str]\n"})}),"\n",(0,a.jsx)(i.h2,{id:"members-4",children:"Members"}),"\n",(0,a.jsx)(i.h3,{id:"possibilities-listfloat--str",children:(0,a.jsx)(i.code,{children:"possibilities: list[float | str]"})}),"\n",(0,a.jsx)(i.p,{children:"A list of valid discrete values the parameter can take. Each element can be a float or string, depending on the parameter's nature."})]})}function m(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>d});var s=n(6540);const a={},r=s.createContext(a);function t(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);