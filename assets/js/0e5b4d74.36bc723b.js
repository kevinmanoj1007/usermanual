"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[3198],{4228:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"API/Models/specifications","title":"Specification","description":"A comprehensive data class that bundles all design, environment, and model parameters along with observation and evaluation callables required for an agent\'s operation in a given environment.","source":"@site/adk/API/Models/specifications.md","sourceDirName":"API/Models","slug":"/API/Models/specifications","permalink":"/adk/API/Models/specifications","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Specification"},"sidebar":"tutorialSidebar","previous":{"title":"StepData","permalink":"/adk/API/Models/step-data"},"next":{"title":"Genie Model","permalink":"/adk/API/Models/genie-model"}}');var r=i(4848),t=i(8453);const l={sidebar_position:8,title:"Specification"},a="class Specification",o={},d=[{value:"Definition",id:"definition",level:2},{value:"Members",id:"members",level:2},{value:"<code>design_parameters: Actions</code>",id:"design_parameters-actions",level:3},{value:"<code>targets: dict[str, Target]</code>",id:"targets-dictstr-target",level:3},{value:"<code>genie_model: GenieModel</code>",id:"genie_model-geniemodel",level:3},{value:"<code>env_parameters: EnvParameters</code>",id:"env_parameters-envparameters",level:3},{value:"<code>graphs: list[Graph]</code>",id:"graphs-listgraph",level:3},{value:"<code>raw_representations: list[Any]</code>",id:"raw_representations-listany",level:3},{value:"<code>observe_world: Callable[[], dict]</code>",id:"observe_world-callable-dict",level:3},{value:"<code>observe_features: Callable[[], dict]</code>",id:"observe_features-callable-dict",level:3},{value:"<code>step_world: StepWorldCb</code>",id:"step_world-stepworldcb",level:3},{value:"<code>evaluate_expression: Callable[[Target, Observations], RuntimeValue]</code>",id:"evaluate_expression-callabletarget-observations-runtimevalue",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"class-specification",children:"class Specification"})}),"\n",(0,r.jsx)(n.p,{children:"A comprehensive data class that bundles all design, environment, and model parameters along with observation and evaluation callables required for an agent's operation in a given environment."}),"\n",(0,r.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class Specification(BaseModel):\r\n    design_parameters: Actions\r\n    targets: dict[str, Target]\r\n    genie_model: GenieModel\r\n    env_parameters: EnvParameters\r\n    graphs: list[networkx.Graph]\r\n    raw_representations: list[Any] \r\n\r\n    observe_world: Callable[[], dict]\r\n    observe_features: Callable[[], dict]\r\n    step_world: StepWorldCb\r\n    evaluate_expression: Callable[[Target, Observations], RuntimeValue]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"design_parameters-actions",children:(0,r.jsx)(n.code,{children:"design_parameters: Actions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Contains the set of design actions or parameters that define how the system can be manipulated or controlled."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"targets-dictstr-target",children:(0,r.jsx)(n.code,{children:"targets: dict[str, Target]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A dictionary mapping target names to Target objects, specifying what objectives or metrics the agent aims to optimize or achieve."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"genie_model-geniemodel",children:(0,r.jsx)(n.code,{children:"genie_model: GenieModel"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The GenieModel instance containing the model's hyperparameters, metadata, and specification details relevant to the agent."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"env_parameters-envparameters",children:(0,r.jsx)(n.code,{children:"env_parameters: EnvParameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Parameters describing the environment in which the agent operates, such as configuration or constraints."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"graphs-listgraph",children:(0,r.jsx)(n.code,{children:"graphs: list[Graph]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A list of Graph objects representing data flows, dependencies, or system architecture relevant to the optimization problem."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"raw_representations-listany",children:(0,r.jsx)(n.code,{children:"raw_representations: list[Any]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A list of raw data representations or auxiliary information needed internally; the structure and use are context-dependent."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"observe_world-callable-dict",children:(0,r.jsx)(n.code,{children:"observe_world: Callable[[], dict]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A callable function that, when invoked, returns a dictionary capturing the current observable state of the world/environment."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"observe_features-callable-dict",children:(0,r.jsx)(n.code,{children:"observe_features: Callable[[], dict]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A callable function returning a dictionary of extracted features from the environment or system for agent use. Every element in the dictionary corresponds to a single node in the networkx graph (",(0,r.jsx)(n.code,{children:"specifications.graph"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"step_world-stepworldcb",children:(0,r.jsx)(n.code,{children:"step_world: StepWorldCb"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A callback function to advance the state of the environment/world by one step, typically accepting actions or control signals."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"evaluate_expression-callabletarget-observations-runtimevalue",children:(0,r.jsx)(n.code,{children:"evaluate_expression: Callable[[Target, Observations], RuntimeValue]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A callable function that evaluates a given target against observations and returns a runtime value indicating performance or reward."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);