"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[7112],{7589:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"API/Models/target-specifications","title":"Target Specifications","description":"A dataclass that captures all necessary data to represent a target that an agent can achieve.","source":"@site/adk/API/Models/target-specifications.md","sourceDirName":"API/Models","slug":"/API/Models/target-specifications","permalink":"/adk/API/Models/target-specifications","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Target Specifications"},"sidebar":"tutorialSidebar","previous":{"title":"Metadata","permalink":"/adk/API/Models/metadata"},"next":{"title":"World Controls","permalink":"/adk/API/Models/world-controls"}}');var r=i(4848),t=i(8453);const l={sidebar_position:3,title:"Target Specifications"},c="class TargetSpec",o={},a=[{value:"Definition",id:"definition",level:2},{value:"Members",id:"members",level:2},{value:"<code>label: list</code>",id:"label-list",level:3},{value:"<code>description: str</code>",id:"description-str",level:3},{value:"<code>fn: Literal[&quot;min&quot; | &quot;max&quot; | &quot;range&quot; | &quot;equals&quot;]</code>",id:"fn-literalmin--max--range--equals",level:3},{value:"<code>kind: Literal[&quot;scalar&quot; | &quot;vector&quot; | &quot;series&quot; | &quot;matrix&quot;]</code>",id:"kind-literalscalar--vector--series--matrix",level:3},{value:"<code>points: int</code>",id:"points-int",level:3},{value:"<code>precisions: float | list[float] | list[list[float]]</code>",id:"precisions-float--listfloat--listlistfloat",level:3},{value:"<code>order: int</code>",id:"order-int",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"class-targetspec",children:"class TargetSpec"})}),"\n",(0,r.jsx)(n.p,{children:"A dataclass that captures all necessary data to represent a target that an agent can achieve."}),"\n",(0,r.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'class TargetSpec(BaseModel):\r\n    label: str\r\n    description: str\r\n\r\n    fn: Literal["min" | "max" | "range" | "equals"]\r\n    kind: Literal["scalar" | "vector" | "series" | "matrix"]\r\n    points: int\r\n\r\n    precisions: float | list[float] | list[list[float]]\r\n    order: int\n'})}),"\n",(0,r.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"label-list",children:(0,r.jsx)(n.code,{children:"label: list"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A unique identifier which can be used to map user defined expressions (on the\r\nweb interface) to actual agent specifications."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"description-str",children:(0,r.jsx)(n.code,{children:"description: str"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Human-readable description describing the purpose of the target specification. For\r\ninformal purposes only."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"fn-literalmin--max--range--equals",children:(0,r.jsx)(n.code,{children:'fn: Literal["min" | "max" | "range" | "equals"]'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Object function that should be used for the particular target."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"kind-literalscalar--vector--series--matrix",children:(0,r.jsx)(n.code,{children:'kind: Literal["scalar" | "vector" | "series" | "matrix"]'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Declare the type of target used for type checking:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scalar"}),": A single numerical value"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vector"}),": A one-dimensional array of values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"series"}),": A time-series or sequential data structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"matrix"}),": A two-dimensional array of values"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"points-int",children:(0,r.jsx)(n.code,{children:"points: int"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Number of points that are required by the target. For ",(0,r.jsx)(n.code,{children:"vector"})," and ",(0,r.jsx)(n.code,{children:"series"})," targets,\r\nthis represents the length. For ",(0,r.jsx)(n.code,{children:"matrix"})," targets, this represents the total number of elements\r\n(rows \xd7 columns). Number of points is not checked when ",(0,r.jsx)(n.code,{children:"kind"})," is ",(0,r.jsx)(n.code,{children:"scalar"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"precisions-float--listfloat--listlistfloat",children:(0,r.jsx)(n.code,{children:"precisions: float | list[float] | list[list[float]]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Specify the tolerance or precision to which an observation should be optimized to:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When ",(0,r.jsx)(n.code,{children:"kind"})," is ",(0,r.jsx)(n.code,{children:"scalar"}),": A single float value"]}),"\n",(0,r.jsxs)(n.li,{children:["When ",(0,r.jsx)(n.code,{children:"kind"})," is ",(0,r.jsx)(n.code,{children:"vector"})," or ",(0,r.jsx)(n.code,{children:"series"}),": A list of float values (one per point)"]}),"\n",(0,r.jsxs)(n.li,{children:["When ",(0,r.jsx)(n.code,{children:"kind"})," is ",(0,r.jsx)(n.code,{children:"matrix"}),": A 2D list (nested list) of float values matching the matrix dimensions"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Only applicable for ",(0,r.jsx)(n.code,{children:"range"})," and ",(0,r.jsx)(n.code,{children:"equals"})," objective functions."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"order-int",children:(0,r.jsx)(n.code,{children:"order: int"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Used to sort all observations before being provided to the agent, ensures\r\ndata integrity."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);