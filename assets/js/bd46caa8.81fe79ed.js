"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[1004],{8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>o});var n=s(6540);const i={},r=n.createContext(i);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:t},e.children)}},9743:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"simpackage/spice/netlistscope","title":"Netlist Scope","description":"Represents a netlist scope during parsing. Used to track hierarchy and definition context within a SPICE netlist.","source":"@site/connectors/simpackage/spice/netlistscope.md","sourceDirName":"simpackage/spice","slug":"/simpackage/spice/netlistscope","permalink":"/connectors/simpackage/spice/netlistscope","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"connectorsSidebar","previous":{"title":"SpiceNetlistProcessor","permalink":"/connectors/simpackage/spice/netlist-reader"},"next":{"title":"Referrables","permalink":"/connectors/simpackage/spice/referrables"}}');var i=s(4848),r=s(8453);const c={},o="Netlist Scope",a={},d=[{value:"Attributes",id:"attributes",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"netlist-scope",children:"Netlist Scope"})}),"\n",(0,i.jsx)(t.p,{children:"Represents a netlist scope during parsing. Used to track hierarchy and definition context within a SPICE netlist."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-py",children:"class NetlistScope(BaseModel):\r\n    instance_scope: list[str]\r\n    definition_scope: str\n"})}),"\n",(0,i.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"instance_scope"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"list[str]"})}),(0,i.jsx)(t.td,{children:"The current instance scope chain. Represents nested instance identifiers as the parser moves through the design hierarchy."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"definition_scope"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"str"})}),(0,i.jsx)(t.td,{children:"The current definition scope, usually the subcircuit/module name currently being defined or processed."})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);