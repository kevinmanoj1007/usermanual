"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[3681],{6260:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"API/Environments/optimization-env","title":"OptimizationEnv","description":"Abstract class to define an environment for interacting with optimizable systems. Highly recommended","source":"@site/adk/API/Environments/optimization-env.md","sourceDirName":"API/Environments","slug":"/API/Environments/optimization-env","permalink":"/adk/API/Environments/optimization-env","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"OptimizationEnv"},"sidebar":"tutorialSidebar","previous":{"title":"Environments","permalink":"/adk/category/environments"},"next":{"title":"DirectActionEnv","permalink":"/adk/API/Environments/direct-action-env"}}');var i=s(4848),t=s(8453);const o={sidebar_position:1,title:"OptimizationEnv"},l="class OptimizationEnv",a={},d=[{value:"Import",id:"import",level:2},{value:"Members",id:"members",level:2},{value:"<code>world_observation_bounds: gymnasium.spaces.Box</code>",id:"world_observation_bounds-gymnasiumspacesbox",level:3},{value:"<code>world_control_bounds: gymnasium.spaces.Box</code>",id:"world_control_bounds-gymnasiumspacesbox",level:3},{value:"<code>default_raw_world_controls: models.actions.Actions</code>",id:"default_raw_world_controls-modelsactionsactions",level:3},{value:"<code>default_world_controls: numpy.typing.NDArray[numpy.float32]</code>",id:"default_world_controls-numpytypingndarraynumpyfloat32",level:3},{value:"<code>targets: dict[str, models.optimization_model.Target]</code>",id:"targets-dictstr-modelsoptimization_modeltarget",level:3},{value:"Methods",id:"methods",level:2},{value:"evaluate_observations",id:"evaluate_observations",level:3},{value:"evaluate_world_controls",id:"evaluate_world_controls",level:3},{value:"step_world",id:"step_world",level:3},{value:"satisfied_targets",id:"satisfied_targets",level:3},{value:"construct_equivalence_targets",id:"construct_equivalence_targets",level:3}];function c(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"class-optimizationenv",children:"class OptimizationEnv"})}),"\n",(0,i.jsx)(e.p,{children:"Abstract class to define an environment for interacting with optimizable systems. Highly recommended\r\nfor custom environments and heavily used in default environments alike."}),"\n",(0,i.jsx)(e.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:"from adk.envs.optimization_env import OptimizationEnv\n"})}),"\n",(0,i.jsx)(e.h2,{id:"members",children:"Members"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"world_observation_bounds-gymnasiumspacesbox",children:(0,i.jsx)(e.code,{children:"world_observation_bounds: gymnasium.spaces.Box"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": The bounds of the observable parameters of the system being optimized."]}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{type:"warning",children:(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"world_observation_bounds"})," are not necessarily a 1:1 mapping to the ",(0,i.jsx)(e.code,{children:"observation_space"})," /\r\nobservation bounds constructed by an implementation environment."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"world_control_bounds-gymnasiumspacesbox",children:(0,i.jsx)(e.code,{children:"world_control_bounds: gymnasium.spaces.Box"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": The bounds of the controllable parameters of the system being optimized."]}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{type:"warning",children:(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"world_control_bounds"})," are not necessarily a 1:1 mapping to the ",(0,i.jsx)(e.code,{children:"action_space"})," /\r\naction bounds constructed by an implementation environment."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"default_raw_world_controls-modelsactionsactions",children:(0,i.jsx)(e.code,{children:"default_raw_world_controls: models.actions.Actions"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": The default, raw, ",(0,i.jsx)(e.strong,{children:"unevaluated"})," world controls provided by the specification."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"default_world_controls-numpytypingndarraynumpyfloat32",children:(0,i.jsx)(e.code,{children:"default_world_controls: numpy.typing.NDArray[numpy.float32]"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": The default, ",(0,i.jsx)(e.strong,{children:"evaluated"})," world controls provided by the specification."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"targets-dictstr-modelsoptimization_modeltarget",children:(0,i.jsx)(e.code,{children:"targets: dict[str, models.optimization_model.Target]"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": The targets that are desired to be achieved provided by the specification.\r\nSee ",(0,i.jsx)(e.code,{children:"TODO: refer to Target"})," for more info."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"evaluate_observations",children:"evaluate_observations"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Evaluate raw observations. (Converts raw observations into a numpy array)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Takes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"raw_world_observations: models.observations.Observations"}),": The raw observations to be\r\nevaluated, usually obtained from ",(0,i.jsx)(e.code,{children:"step_world"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Returns"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"evaluated_observations: numpy.typing.NDArray[numpy.float32]"}),": The evaluated observations\r\nin a numpy array."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"evaluate_world_controls",children:"evaluate_world_controls"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Evaluate raw world controls / actions. (Converts raw world controls into a numpy array)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Takes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"raw_world_controls: models.actions.Actions"}),": The raw actions to be evaluated."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Returns"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"evaluated_actions: numpy.typing.NDArray[numpy.float32]"}),": The evaluated actions in a numpy array."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"step_world",children:"step_world"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Sets the stochastic and controllable parameters of the system to the provided\r\nstochastic parameters and world controls, then returns the raw observations obtained from those\r\nstochastic parameters and world controls."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Takes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"step_data: StepData"}),": The stochastic parameters and world controls to be set before running\r\nthe system and obtaining the raw observations."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Returns"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"raw_world_observations: models.observations.Observations"}),": The raw observations obtained\r\nfrom running the system with the given world controls."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"satisfied_targets",children:"satisfied_targets"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Evaluates evaluated observations to an array of booleans signifying the\r\ntargets that are satisfied according to the ",(0,i.jsx)(e.code,{children:"targets"})," member."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Takes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"evaluated_observations: numpy.typing.NDArray[numpy.float32]"}),": The evaluated observations\r\nthat will be evaluated against the targets."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Returns"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"targets_satisfied: numpy.typing.NDArray[numpy.bool_]"}),": An array of booleans signifying\r\nwhether or not each evaluated observation met the respective, corresponding target specification."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\xa0"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.h3,{id:"construct_equivalence_targets",children:"construct_equivalence_targets"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),': Evaluates an array of "equivalence target"s from the ',(0,i.jsx)(e.code,{children:"targets"})," member. Useful\r\nfor calculating distances from different intended target types, i.e. (Range, Min, Max)."]}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Takes: Nothing"})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Returns"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"equivalence_targets: numpy.typing.NDArray[numpy.float32]"}),": The equivalence targets constructed\r\nfrom the ",(0,i.jsx)(e.code,{children:"targets"})," member."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);