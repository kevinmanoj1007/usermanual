"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[5294],{8197:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"API/Models/Optimization/optimization-node","title":"OptimizationNodeSpec","description":"Data class for defining optimization node specifications within computational graphs","source":"@site/adk/API/Models/Optimization/optimization-node.md","sourceDirName":"API/Models/Optimization","slug":"/API/Models/Optimization/optimization-node","permalink":"/adk/API/Models/Optimization/optimization-node","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"OptimizationNodeSpec","description":"Data class for defining optimization node specifications within computational graphs","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"DesignParamSpec","permalink":"/adk/API/Models/Optimization/design-parameters"},"next":{"title":"OptimizationSpec","permalink":"/adk/API/Models/Optimization/optimization-spec"}}');var n=t(4848),r=t(8453);const o={title:"OptimizationNodeSpec",description:"Data class for defining optimization node specifications within computational graphs",sidebar_position:2},s="OptimizationNodeSpec",d={},c=[{value:"Definition",id:"definition",level:2},{value:"Members",id:"members",level:2},{value:"<code>name: str = Field(min_length=1)</code>",id:"name-str--fieldmin_length1",level:3},{value:"<code>static_parameters: dict[str, DesignParamSpec]</code>",id:"static_parameters-dictstr-designparamspec",level:3},{value:"<code>optimized_parameters: dict[str, DesignParamSpec]</code>",id:"optimized_parameters-dictstr-designparamspec",level:3},{value:"<code>randomized_parameters: dict[str, DesignParamSpec]</code>",id:"randomized_parameters-dictstr-designparamspec",level:3},{value:"<code>targets: dict[str, TargetSpec]</code>",id:"targets-dictstr-targetspec",level:3},{value:"<code>model_config = ConfigDict(arbitrary_types_allowed=True)</code>",id:"model_config--configdictarbitrary_types_allowedtrue",level:3},{value:"<code>graph: nx.Graph | None</code>",id:"graph-nxgraph--none",level:3}];function p(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"optimizationnodespec",children:"OptimizationNodeSpec"})}),"\n",(0,n.jsx)(i.p,{children:"A data class that defines the full specification of an optimization node within a computational graph. It describes the parameters, targets, and graph associations required for an optimization task or subsystem."}),"\n",(0,n.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-python",children:"class OptimizationNodeSpec(BaseModel):\r\n    name: str = Field(min_length=1)\r\n\r\n    static_parameters: dict[str, DesignParamSpec]\r\n    optimized_parameters: dict[str, DesignParamSpec]\r\n    randomized_parameters: dict[str, DesignParamSpec]\r\n\r\n    targets: dict[str, TargetSpec]\r\n\r\n    model_config = ConfigDict(arbitrary_types_allowed=True)\r\n    graph: nx.Graph | None\n"})}),"\n",(0,n.jsx)(i.h2,{id:"members",children:"Members"}),"\n",(0,n.jsx)(i.h3,{id:"name-str--fieldmin_length1",children:(0,n.jsx)(i.code,{children:"name: str = Field(min_length=1)"})}),"\n",(0,n.jsx)(i.p,{children:"The unique identifier or name of the optimization node. Must be at least one character long."}),"\n",(0,n.jsx)(i.h3,{id:"static_parameters-dictstr-designparamspec",children:(0,n.jsx)(i.code,{children:"static_parameters: dict[str, DesignParamSpec]"})}),"\n",(0,n.jsxs)(i.p,{children:["Dictionary of parameters with fixed values that remain constant throughout the optimization process. Each entry maps a parameter name to its corresponding ",(0,n.jsx)(i.code,{children:"DesignParamSpec"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"optimized_parameters-dictstr-designparamspec",children:(0,n.jsx)(i.code,{children:"optimized_parameters: dict[str, DesignParamSpec]"})}),"\n",(0,n.jsx)(i.p,{children:"Dictionary of parameters that are subject to optimization. These parameters will be tuned or modified by the optimization algorithm to improve performance or meet objectives."}),"\n",(0,n.jsx)(i.h3,{id:"randomized_parameters-dictstr-designparamspec",children:(0,n.jsx)(i.code,{children:"randomized_parameters: dict[str, DesignParamSpec]"})}),"\n",(0,n.jsx)(i.p,{children:"Dictionary of parameters that are assigned randomized values. Typically used for stochastic optimization or to introduce variability in simulation runs."}),"\n",(0,n.jsx)(i.h3,{id:"targets-dictstr-targetspec",children:(0,n.jsx)(i.code,{children:"targets: dict[str, TargetSpec]"})}),"\n",(0,n.jsxs)(i.p,{children:["Collection of optimization targets associated with the node. Each key corresponds to a target name, and each value defines a ",(0,n.jsx)(i.code,{children:"TargetSpec"})," describing its objective function, expected output, and validation rules."]}),"\n",(0,n.jsx)(i.h3,{id:"model_config--configdictarbitrary_types_allowedtrue",children:(0,n.jsx)(i.code,{children:"model_config = ConfigDict(arbitrary_types_allowed=True)"})}),"\n",(0,n.jsxs)(i.p,{children:["Pydantic configuration allowing arbitrary object types such as ",(0,n.jsx)(i.code,{children:"networkx.Graph"})," to be included as model fields without validation errors."]}),"\n",(0,n.jsx)(i.h3,{id:"graph-nxgraph--none",children:(0,n.jsx)(i.code,{children:"graph: nx.Graph | None"})}),"\n",(0,n.jsx)(i.p,{children:"Optional NetworkX graph object representing the connectivity or relationship of the node within the larger optimization graph. Used to define dependencies or system topology."})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>s});var a=t(6540);const n={},r=a.createContext(n);function o(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);