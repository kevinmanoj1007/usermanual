"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[3533],{4232:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"API/Models/environment-data","title":"EnvData","description":"Data class encapsulating environment configuration and agent-environment interaction parameters","source":"@site/adk/API/Models/environment-data.md","sourceDirName":"API/Models","slug":"/API/Models/environment-data","permalink":"/adk/API/Models/environment-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"EnvData","description":"Data class encapsulating environment configuration and agent-environment interaction parameters","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"AgentData","permalink":"/adk/API/Models/agent-data"},"next":{"title":"StepData","permalink":"/adk/API/Models/step-data"}}');var o=a(4848),i=a(8453);const s={title:"EnvData",description:"Data class encapsulating environment configuration and agent-environment interaction parameters",sidebar_position:6},r="EnvData",d={},c=[{value:"Definition",id:"definition",level:2},{value:"Members",id:"members",level:2},{value:"<code>static_world_controls_space: gym.spaces.Dict</code>",id:"static_world_controls_space-gymspacesdict",level:3},{value:"<code>optimized_world_controls_space: gym.spaces.Dict</code>",id:"optimized_world_controls_space-gymspacesdict",level:3},{value:"<code>randomized_world_controls_space: gym.spaces.Dict</code>",id:"randomized_world_controls_space-gymspacesdict",level:3},{value:"<code>default_static_world_controls: dict[str, DesignParamValue]</code>",id:"default_static_world_controls-dictstr-designparamvalue",level:3},{value:"<code>default_optimized_world_controls: dict[str, DesignParamValue]</code>",id:"default_optimized_world_controls-dictstr-designparamvalue",level:3},{value:"<code>default_randomized_world_controls: dict[str, DesignParamValue]</code>",id:"default_randomized_world_controls-dictstr-designparamvalue",level:3},{value:"<code>world_observations_space: gym.spaces.Dict</code>",id:"world_observations_space-gymspacesdict",level:3},{value:"<code>default_world_observations: dict[str, ObservationValue]</code>",id:"default_world_observations-dictstr-observationvalue",level:3},{value:"<code>targets_space: gym.spaces.Dict</code>",id:"targets_space-gymspacesdict",level:3},{value:"<code>step_world: StepWorldCB</code>",id:"step_world-stepworldcb",level:3},{value:"<code>optimization_data: OptimizationData</code>",id:"optimization_data-optimizationdata",level:3},{value:"<code>extra: dict[str, Any]</code>",id:"extra-dictstr-any",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"envdata",children:"EnvData"})}),"\n",(0,o.jsx)(t.p,{children:"A data class encapsulating environment configuration, control spaces, default control values, observation spaces, target spaces, and other parameters necessary for agent\u2013environment interaction."}),"\n",(0,o.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class EnvData(BaseModel):\r\n    static_world_controls_space: gym.spaces.Dict\r\n    optimized_world_controls_space: gym.spaces.Dict\r\n    randomized_world_controls_space: gym.spaces.Dict\r\n\r\n    default_static_world_controls: dict[str, DesignParamValue]\r\n    default_optimized_world_controls: dict[str, DesignParamValue]\r\n    default_randomized_world_controls: dict[str, DesignParamValue]\r\n\r\n    world_observations_space: gym.spaces.Dict\r\n    default_world_observations: dict[str, ObservationValue]\r\n\r\n    targets_space: gym.spaces.Dict\r\n\r\n    step_world: StepWorldCB\r\n\r\n    optimization_data: OptimizationData\r\n\r\n    extra: dict[str, Any]\r\n\r\n    model_config = ConfigDict(\r\n        arbitrary_types_allowed=True\r\n    )\n"})}),"\n",(0,o.jsx)(t.h2,{id:"members",children:"Members"}),"\n",(0,o.jsx)(t.h3,{id:"static_world_controls_space-gymspacesdict",children:(0,o.jsx)(t.code,{children:"static_world_controls_space: gym.spaces.Dict"})}),"\n",(0,o.jsx)(t.p,{children:"Defines the space of static world controls \u2014 parameters that remain fixed during execution unless explicitly changed."}),"\n",(0,o.jsx)(t.h3,{id:"optimized_world_controls_space-gymspacesdict",children:(0,o.jsx)(t.code,{children:"optimized_world_controls_space: gym.spaces.Dict"})}),"\n",(0,o.jsx)(t.p,{children:"Defines the space of optimized world controls \u2014 parameters that the optimization loop is allowed to modify in order to improve performance or meet targets."}),"\n",(0,o.jsx)(t.h3,{id:"randomized_world_controls_space-gymspacesdict",children:(0,o.jsx)(t.code,{children:"randomized_world_controls_space: gym.spaces.Dict"})}),"\n",(0,o.jsx)(t.p,{children:"Defines the space of randomized world controls \u2014 parameters that are sampled randomly for variability or stochasticity during environment runs."}),"\n",(0,o.jsx)(t.h3,{id:"default_static_world_controls-dictstr-designparamvalue",children:(0,o.jsx)(t.code,{children:"default_static_world_controls: dict[str, DesignParamValue]"})}),"\n",(0,o.jsx)(t.p,{children:"Default values for static world controls used when no explicit static control values are provided."}),"\n",(0,o.jsx)(t.h3,{id:"default_optimized_world_controls-dictstr-designparamvalue",children:(0,o.jsx)(t.code,{children:"default_optimized_world_controls: dict[str, DesignParamValue]"})}),"\n",(0,o.jsx)(t.p,{children:"Default values for optimized world controls before any optimization process modifies them."}),"\n",(0,o.jsx)(t.h3,{id:"default_randomized_world_controls-dictstr-designparamvalue",children:(0,o.jsx)(t.code,{children:"default_randomized_world_controls: dict[str, DesignParamValue]"})}),"\n",(0,o.jsx)(t.p,{children:"Default values for randomized world controls, used as baseline values before random sampling is applied."}),"\n",(0,o.jsx)(t.h3,{id:"world_observations_space-gymspacesdict",children:(0,o.jsx)(t.code,{children:"world_observations_space: gym.spaces.Dict"})}),"\n",(0,o.jsx)(t.p,{children:"Defines the dictionary-based observation space specifying which world variables can be observed and their valid ranges or types."}),"\n",(0,o.jsx)(t.h3,{id:"default_world_observations-dictstr-observationvalue",children:(0,o.jsx)(t.code,{children:"default_world_observations: dict[str, ObservationValue]"})}),"\n",(0,o.jsx)(t.p,{children:"A dictionary containing default observation values, used as an initial or fallback representation of the world's observable state."}),"\n",(0,o.jsx)(t.h3,{id:"targets_space-gymspacesdict",children:(0,o.jsx)(t.code,{children:"targets_space: gym.spaces.Dict"})}),"\n",(0,o.jsx)(t.p,{children:"Defines the space of target variables or metrics that the environment or optimization process aims to evaluate."}),"\n",(0,o.jsx)(t.h3,{id:"step_world-stepworldcb",children:(0,o.jsx)(t.code,{children:"step_world: StepWorldCB"})}),"\n",(0,o.jsx)(t.p,{children:"A callback function responsible for advancing the environment by one step, updating world state and observations."}),"\n",(0,o.jsx)(t.h3,{id:"optimization_data-optimizationdata",children:(0,o.jsx)(t.code,{children:"optimization_data: OptimizationData"})}),"\n",(0,o.jsx)(t.p,{children:"Contains optimization-related information such as current optimization state, parameters, intermediate results, and metadata used by the optimization loop."}),"\n",(0,o.jsx)(t.h3,{id:"extra-dictstr-any",children:(0,o.jsx)(t.code,{children:"extra: dict[str, Any]"})}),"\n",(0,o.jsx)(t.p,{children:"A dictionary for storing additional model-specific or environment-specific metadata, extensions, or configuration parameters."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>r});var n=a(6540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);