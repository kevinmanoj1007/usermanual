"use strict";(self.webpackChunkuser_manual=self.webpackChunkuser_manual||[]).push([[2350],{1543:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cdk/router","title":"Router","description":"The Router class manages endpoint registration and request dispatching for CDK-based connectors. It supports route-based handling for methods (GET, SET, DELETE), typed argument validation via introspection, and middleware chaining.","source":"@site/connectors/cdk/router.md","sourceDirName":"cdk","slug":"/cdk/router","permalink":"/connectors/cdk/router","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"connectorsSidebar","previous":{"title":"Registration","permalink":"/connectors/cdk/register"},"next":{"title":"Middleware","permalink":"/connectors/cdk/middleware"}}');var i=r(4848),s=r(8453);const d={},l="Router",a={},c=[{value:"Class Definition",id:"class-definition",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Initializes",id:"initializes",level:3},{value:"Attributes",id:"attributes",level:2},{value:"Public Methods",id:"public-methods",level:2},{value:"Parameters",id:"parameters-1",level:4},{value:"Behavior",id:"behavior",level:4},{value:"Internal Methods",id:"internal-methods",level:2},{value:"Exceptions",id:"exceptions",level:2},{value:"Dependencies",id:"dependencies",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"router",children:"Router"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"router",children:"Router"})," class manages endpoint registration and request dispatching for CDK-based connectors. It supports route-based handling for methods (GET, SET, DELETE), typed argument validation via introspection, and middleware chaining."]}),"\n",(0,i.jsx)(n.h2,{id:"class-definition",children:"Class Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Router:\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Defined in:"})," ",(0,i.jsx)(n.code,{children:"router.py"})]}),"\n",(0,i.jsx)(n.p,{children:"Central component that routes requests to appropriate handlers and integrates middleware into the execution flow."}),"\n",(0,i.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def __init__(self):\n"})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.p,{children:"No parameters required for initialization."}),"\n",(0,i.jsx)(n.h3,{id:"initializes",children:"Initializes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Handler dictionary for method-endpoint mapping"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"middleware",children:"Middleware"})," list and stack management"]}),"\n",(0,i.jsxs)(n.li,{children:["Strategy instance ",(0,i.jsx)(n.a,{href:"register",children:"registration"})]}),"\n",(0,i.jsx)(n.li,{children:"Request processing infrastructure"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Attribute"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"handlers"})}),(0,i.jsx)(n.td,{children:"dict"}),(0,i.jsx)(n.td,{children:"A nested dictionary that maps request methods (GET, SET, DELETE) to their respective endpoint handlers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"strategy"})}),(0,i.jsx)(n.td,{children:"ConnectorSpec"}),(0,i.jsx)(n.td,{children:"Instance of the active ConnectorSpec, passed automatically to handler functions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"middleware"})}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsxs)(n.td,{children:["A list of middleware callables added to the ",(0,i.jsx)(n.a,{href:"router",children:"router"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"middleware_stack"})}),(0,i.jsx)(n.td,{children:"Callable"}),(0,i.jsx)(n.td,{children:"The composed middleware execution stack (built lazily on first request)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"public-methods",children:"Public Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def route(endpoint: str, method: Literal["GET", "SET", "DELETE"]) -> Callable\n'})}),"\n",(0,i.jsx)(n.p,{children:"Decorator to register a function to a specific endpoint and method."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Overwrites existing handler if the same endpoint is registered again."}),"\n",(0,i.jsx)(n.li,{children:"Logs a warning on overwrite."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get(endpoint: str) -> Callable\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Shortcut for ",(0,i.jsx)(n.code,{children:'route(..., method="GET")'}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def set(endpoint: str) -> Callable\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Shortcut for ",(0,i.jsx)(n.code,{children:'route(..., method="SET")'}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def delete(endpoint: str) -> Callable\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Shortcut for ",(0,i.jsx)(n.code,{children:'route(..., method="DELETE")'}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def add_middleware(middleware: MiddlewareCallable) -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Appends a middleware function to the middleware stack. ",(0,i.jsx)(n.a,{href:"middleware",children:"Middleware"})," must conform to the ",(0,i.jsx)(n.code,{children:"(Request, call_next) -> Awaitable[Any]"})," signature."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def async call(...) -> Any\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Main execution entry point for the ",(0,i.jsx)(n.a,{href:"router",children:"router"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"endpoint"})," (str): Target endpoint path."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"method"}),' ("GET" | "SET" | "DELETE"): HTTP-like request method.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"request_id"})," (str): Unique ID for the request (used in tracing/errors)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"body"})," (Any): Request payload."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"strategy"})," (ConnectorSpec): Strategy instance injected into the request context."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Validates method and endpoint existence."}),"\n",(0,i.jsx)(n.li,{children:"Builds middleware stack if uninitialized."}),"\n",(0,i.jsx)(n.li,{children:"Instantiates Request and dispatches through middleware and handler."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"internal-methods",children:"Internal Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def build_middleware_stack() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Wraps the internal handler in a composed middleware stack using the registered middleware functions. Each middleware wraps the next in a LIFO order."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def async _handle(request: Request) -> Any\n"})}),"\n",(0,i.jsx)(n.p,{children:"Core request processing method:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Inspects the handler's signature and resolves arguments from the request body."}),"\n",(0,i.jsx)(n.li,{children:"Supports type coercion and Pydantic validation for BaseModel arguments."}),"\n",(0,i.jsx)(n.li,{children:"Automatically injects ConnectorSpec and Request types if declared."}),"\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.code,{children:"asyncio.to_thread()"})," to invoke the handler in a non-blocking thread."]}),"\n",(0,i.jsx)(n.li,{children:"Raises RequestException on validation or mapping failure."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"exceptions",children:"Exceptions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RequestException"}),": Raised during validation, coercion, or argument mismatch. Includes structured error codes (422, 400, 404, 500)."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ConnectorSpec"}),": Strategy interface for connector implementations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request"}),": Request object containing endpoint and payload data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MiddlewareCallable"}),": Type definition for middleware functions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RequestException"}),": Custom exception for request processing errors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"asyncio"}),": For non-blocking thread execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pydantic"}),": For BaseModel validation and type coercion"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);